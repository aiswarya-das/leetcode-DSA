125. Valid Palindrome

A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

Example 1:
Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.

Python Solution:

class Solution:
    def isPalindrome(self, s: str) -> bool:
        # Helper function to check if a character is alphanumeric
        def is_alphanumeric(c):
            code = ord(c)
            return (97 <= code <= 122) or (48 <= code <= 57) or (65 <= code <= 90)
        
        l, r = 0, len(s) - 1  # Initialize two pointers at both ends of the string
        
        while l < r:
            # Move left pointer forward if current character is not alphanumeric
            while l < r and not is_alphanumeric(s[l]):
                l += 1
            # Move right pointer backward if current character is not alphanumeric
            while r > l and not is_alphanumeric(s[r]):
                r -= 1
            # Compare characters in lowercase
            if s[l].lower() != s[r].lower():
                return False
            # Move both pointers inward
            l, r = l + 1, r - 1

        return True  # All characters matched, it's a palindrome
